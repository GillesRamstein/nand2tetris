function String.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push argument 0
push constant 0
eq
not
if-goto String.new.IF_FALSE.1
push constant 1
pop argument 0
label String.new.IF_FALSE.1
push argument 0
call Memory.alloc 1
pop this 0
push constant 0
pop this 1
push argument 0
pop this 2
push pointer 0
return
function String.dispose 0
push argument 0
pop pointer 0
push this 0
call Memory.deAlloc 1
pop temp 0
push argument 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function String.length 0
push argument 0
pop pointer 0
push this 1
return
function String.charAt 0
push argument 0
pop pointer 0
push argument 1
push this 2
lt
not
if-goto String.charAt.IF_FALSE.1
push this 0
push argument 1
add
pop pointer 1
push that 0
return
label String.charAt.IF_FALSE.1
return
function String.setCharAt 0
push argument 0
pop pointer 0
push argument 1
push this 2
lt
not
if-goto String.setCharAt.IF_FALSE.1
push argument 2
push this 0
push argument 1
add
pop pointer 1
pop that 0
label String.setCharAt.IF_FALSE.1
push constant 0
return
function String.appendChar 0
push argument 0
pop pointer 0
push this 1
push this 2
lt
not
if-goto String.appendChar.IF_FALSE.1
push argument 1
push this 0
push this 1
add
pop pointer 1
pop that 0
push this 1
push constant 1
add
pop this 1
label String.appendChar.IF_FALSE.1
push argument 0
return
function String.eraseLastChar 0
push argument 0
pop pointer 0
push this 1
push constant 0
gt
not
if-goto String.eraseLastChar.IF_FALSE.1
push this 1
push constant 1
sub
pop this 1
label String.eraseLastChar.IF_FALSE.1
push constant 0
return
function String.intValue 4
push argument 0
pop pointer 0
push constant 0
pop local 0
push constant 1
pop local 2
push this 0
push local 0
add
pop pointer 1
push that 0
push constant 45
eq
not
if-goto String.intValue.IF_FALSE.1
push constant 1
neg
pop local 2
push constant 1
pop local 0
label String.intValue.IF_FALSE.1
label String.intValue.WHILE_START.1
push local 0
push constant 16
lt
not
if-goto String.intValue.WHILE_EXIT.1
push this 0
push local 0
add
pop pointer 1
push that 0
pop local 3
push constant 47
push local 3
lt
push local 3
push constant 58
lt
and
not
if-goto String.intValue.IF_FALSE.2
push constant 10
push local 1
call Math.multiply 2
push local 3
push constant 48
sub
add
pop local 1
push local 0
push constant 1
add
pop local 0
goto String.intValue.IF_END.2
label String.intValue.IF_FALSE.2
push constant 16
pop local 0
label String.intValue.IF_END.2
goto String.intValue.WHILE_START.1
label String.intValue.WHILE_EXIT.1
push local 2
push constant 1
eq
not
if-goto String.intValue.IF_FALSE.3
push local 1
return
label String.intValue.IF_FALSE.3
push local 1
neg
return
function String.setInt 0
push argument 0
pop pointer 0
push constant 0
pop this 1
push argument 1
push constant 0
lt
not
if-goto String.setInt.IF_FALSE.1
push argument 1
neg
pop argument 1
push pointer 0
push constant 45
call String.appendChar 2
pop temp 0
label String.setInt.IF_FALSE.1
push argument 1
push argument 0
call String.intToString 2
pop temp 0
push constant 0
return
function String.intToString 2
push argument 0
push constant 10
call String.mathMod 2
pop local 0
push constant 48
push local 0
add
pop local 1
push argument 0
push constant 10
lt
not
if-goto String.intToString.IF_FALSE.1
push argument 1
push local 1
call String.appendChar 2
return
goto String.intToString.IF_END.1
label String.intToString.IF_FALSE.1
push this 1
push this 2
lt
not
if-goto String.intToString.IF_FALSE.2
push argument 0
push constant 10
call Math.divide 2
push argument 1
call String.intToString 2
pop temp 0
push argument 1
push local 1
call String.appendChar 2
return
goto String.intToString.IF_END.2
label String.intToString.IF_FALSE.2
return
label String.intToString.IF_END.2
label String.intToString.IF_END.1
function String.newLine 0
push constant 128
return
function String.backSpace 0
push constant 129
return
function String.doubleQuote 0
push constant 34
return
function String.mathMod 1
push argument 0
push argument 1
call Math.divide 2
pop local 0
push argument 0
push local 0
push argument 1
call Math.multiply 2
sub
return
